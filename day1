problem:1

int subtractProductAndSum(int n){
    int sum=0,rem;
    int p=1,f;
    while(n!=0)
    {
        rem=n%10;
        sum+=rem;
        p*=rem;
        n=n/10;
    }
    f=p-sum;
    return f;

}

problem 2:



int* selfDividingNumbers(int left, int right, int* returnSize)

{

    int i,rem,flag,q=0,a[right],k;
    for(i=left;i<=right;i++)
    {
    flag=0;
         k=i;
        while(k!=0)
        {
            rem=k%10;
            if( rem==0 || i%rem!=0)
            {
                flag++;
            }
            k/=10;
        }

        if(flag==0)
        {
            a[q]=i;
            q++;
        }
    }
     *returnSize=q;
    int* arr=malloc(sizeof(int)*q);
    for(i=0;i<q;i++)
     {
        arr[i]=a[i];
    }
    return arr;

}


